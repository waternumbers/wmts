% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wmts-package.R, R/wmts.R
\docType{package}
\name{wmts}
\alias{wmts}
\title{wmts}
\description{
This package contains a (incomplete) Web Map Tile Service for R
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-wmts-new}{\code{wmts$new()}}
\item \href{#method-wmts-TileMatrix}{\code{wmts$TileMatrix()}}
\item \href{#method-wmts-tile}{\code{wmts$tile()}}
\item \href{#method-wmts-legend}{\code{wmts$legend()}}
\item \href{#method-wmts-feature}{\code{wmts$feature()}}
\item \href{#method-wmts-cache}{\code{wmts$cache()}}
\item \href{#method-wmts-overload}{\code{wmts$overload()}}
\item \href{#method-wmts-clone}{\code{wmts$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-new"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-new}{}}}
\subsection{Method \code{new()}}{
Creates a wmts object from the file name passed to the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$new(dataFile, use_time = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataFile}}{Name of the file to be used as the wmts}

\item{\code{use_time}}{logical should TileMatrix value be taken from the times rather then layer names}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible(self) suitable for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-TileMatrix"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-TileMatrix}{}}}
\subsection{Method \code{TileMatrix()}}{
Return the list of available TileMatrix sets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$TileMatrix()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-tile"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-tile}{}}}
\subsection{Method \code{tile()}}{
Returns a single tile as a raster object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$tile(TileMatrix, Z, X, Y, w = 256, h = w)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{TileMatrix}}{the TileMatrix (SpatRaster layer) to return from}

\item{\code{Z}}{zoom level: 0,1,2,3,4,...}

\item{\code{X}}{row of image grid}

\item{\code{Y}}{column of image grid}

\item{\code{w}}{width in pixels}

\item{\code{h}}{height in pixels}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This works by defining a SpatRaster of the required area then projecting the SpatRaster layer onto this. The numeric values of the resulting raster are converted to colouts using fcolour and returned as a raster (as defined in grDevices). Plotting or saving this to an image of the correct dimensions is handled in genTiles or serveWMTS.
}

\subsection{Returns}{
a grDevices raster object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-legend"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-legend}{}}}
\subsection{Method \code{legend()}}{
Returns a legend for a TileMatrix
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$legend(TileMatrix)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{TileMatrix}}{the layer of rst to generate the legend for}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a plot containing the legend
return data for a given set of coordinates
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-feature"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-feature}{}}}
\subsection{Method \code{feature()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$feature(TileMatrix, lon, lat, plot = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{TileMatrix}}{the layer of rst to generate tile from}

\item{\code{lon}}{Longitdue of point of interest}

\item{\code{lat}}{Latitude of the point of interest}

\item{\code{plot}}{should a plot be returned}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
returns the output of fExtract or fPlot
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-cache"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-cache}{}}}
\subsection{Method \code{cache()}}{
Shows, or sets the cache values
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$cache(p = NULL, x = NULL, create = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{p}}{the path}

\item{\code{x}}{logical if to clear path on file change}

\item{\code{create}}{logical, should path be created. Default is FALSE}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If both p and x are \code{NULL} returns the current values as a list. If only one is \code{NULL} then it is left unaltered. The non-NULL values is set to the value given, or if \code{NA} the default value
}

\subsection{Returns}{
Either the current value or invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-overload"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-overload}{}}}
\subsection{Method \code{overload()}}{
Shows or Sets one over the overloadable function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$overload(f = NULL, name = c("fExtract", "fPlot", "fColour", "fLegend"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{f}}{see details}

\item{\code{name}}{name of function to overload}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If \code{f=NULL} the current value of the names function is returned.
If \code{f=NA} then the default function is set. Otherwise if f is a function it set to be used.
The function being overloaded should take the following inputs and outputs

fExtract
Input: a SpatVector (containing only the point for extraction) and the TileMatrix name
Output: a object that be serialised to json for a GetFeatureInfo response

fPlot
Input: The output of fExtract and the TileMatrix name
Output: A plot of the extracted data

fColour
Input: a vector or matrix of numerical values and the TileMatrix name
Output: a raster object of colour codes the same size as the input matrix

fLegend
Input: the TileMatrix name
Output: A plot to use as the legend
}

\subsection{Returns}{
Either the current value or invisible(self)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-wmts-clone"></a>}}
\if{latex}{\out{\hypertarget{method-wmts-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{wmts$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
